{"version":3,"file":"example.js","sources":["webpack:///webpack/bootstrap 6536b79b93dd4948b381","webpack:///src/example/App.js","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///src/ImageZoomer.js","webpack:///src/example/ImagePicker.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6536b79b93dd4948b381\n **/","import React from 'react'\nimport {render} from 'react-dom'\n\nimport ImageZoomer from '../ImageZoomer'\nimport ImagePicker from './ImagePicker'\n\nlet images = []\nfor (let i = 1; i < 9; i++) {\n    images.push(`http://kingofwallpapers.com/wallpaper-hd/wallpaper-hd-00${i}.jpg`)\n}\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            mainImage: images[0]\n        }\n        this.changeImage = this.changeImage.bind(this)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.mainImage !== nextState.mainImage\n    }\n    changeImage(image) {\n        this.setState({mainImage: image})\n    }\n\n    render() {\n\n        const mainImage = {\n            id: 'mainImage',\n            src: this.state.mainImage,\n            className: 'mainCanvas',\n            width: '400px',\n            height: '200px'\n        }\n        const zoomer = {\n            height: 80,\n            width: 80,\n            style: 'rgba(255,165,0,0.3)'\n        }\n        const zoomedImage = {\n            id: 'zoomedImage',\n            className: 'zoomedCanvas',\n            width: '450px',\n            height: '450px'\n        }\n\n        return (\n            <div>\n                <ImageZoomer className='imageZoomer' mainImage={mainImage} zoomedImage={zoomedImage} zoomer={zoomer}>\n                    Nature Gallery\n                    <ImagePicker images={images} changeImage={this.changeImage}/>\n                </ImageZoomer>\n            </div>\n        )\n    }\n}\n\nrender(\n    <App/>, document.getElementById('root'))\n\n\n\n/** WEBPACK FOOTER **\n ** src/example/App.js\n **/","module.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 3\n ** module chunks = 0\n **/","import React, {PropTypes} from 'react'\n\nconst defaultProps = {\n    mainImage: {\n        src: '',\n        width: '200px',\n        height: '100px'\n        \n    },\n    zoomer: {\n        height: 50,\n        width: 50,\n        style: 'rgba(255,165,0,0.5)'\n    },\n    zoomedImage: {\n        postion: 'right',\n        width: '400px',\n        height: '400px'\n    }\n}\n\nconst propTypes = {\n    mainImage: PropTypes.shape({src: PropTypes.string.isRequired, id: PropTypes.string.isRequired, className: PropTypes.string,width:PropTypes.string,height:PropTypes.string}).isRequired,\n    zoomer: PropTypes.shape({height: PropTypes.number, width: PropTypes.number, style: PropTypes.string}),\n    zoomedImage: PropTypes.shape({id: PropTypes.string.isRequird, className: PropTypes.string, position: PropTypes.string,width:PropTypes.string,height:PropTypes.string})\n}\n\nclass ImageZoomer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showZoomedCanvas: false\n        }\n        this.drawImage = this.drawImage.bind(this)\n    }\n\n    componentDidMount() {\n        this.drawImage()\n    }\n\n    componentDidUpdate() {\n        this.drawImage()\n    }\n\n    drawImage() {\n        let mainImageCanvas = this.refs[this.props.mainImage.id]\n        const mainCanvasWidth = mainImageCanvas.width\n        const mainCanvasHeight = mainImageCanvas.height\n\n        // get the absolute postion of the canvas\n        const rectObject = mainImageCanvas.getBoundingClientRect()\n        const mainCanvasLeftOffset = rectObject.left\n        const mainCanvasTopOffset = rectObject.top\n\n        let zoomedCanvas = this.refs[this.props.zoomedImage.id]\n        const zoomedCanvasWidth = zoomedCanvas.width\n        const zoomedCanvasHeight = zoomedCanvas.height\n\n        const zoomerWidth = this.props.zoomer.width\n        const zoomerHeight = this.props.zoomer.height\n\n        let mainContext = mainImageCanvas.getContext('2d')\n        let zoomedContext = zoomedCanvas.getContext('2d')\n\n        let mainImg = new Image()\n        mainImg.src = this.props.mainImage.src\n\n        mainImg.onload = () => {\n            mainContext.drawImage(mainImg, 0, 0, mainCanvasWidth, mainCanvasHeight)\n        }\n\n        const widthRadio = mainImg.width / mainCanvasWidth\n        const heightRadio = mainImg.height / mainCanvasHeight\n        let self = this\n        mainImageCanvas.onmousemove = (e) => {\n            const mounseXCoord = e.clientX - mainCanvasLeftOffset\n            const mounseYCoord = e.clientY - mainCanvasTopOffset\n            this.drawImageOnCanvas(mainImg, mainContext, mainCanvasWidth, mainCanvasHeight)\n            const rectCoord = this.getRectCord(mounseXCoord, mounseYCoord, mainCanvasWidth, mainCanvasHeight, zoomerWidth, zoomerHeight)\n            this.drawRectOnCanvas(mainContext, rectCoord)\n            this.drawImageOnZoomedCanvas(mainImg, zoomedContext, mounseXCoord, mounseYCoord, zoomedCanvasWidth, zoomedCanvasHeight, widthRadio, heightRadio, zoomerWidth, zoomerHeight)\n            if (!self.state.showZoomedCanvas) {\n                self.setState({showZoomedCanvas: true})\n            }\n        }\n\n        mainImageCanvas.onmouseleave = () => this.restoreCanvas(mainImg, mainContext, zoomedContext, mainCanvasWidth, mainCanvasHeight, zoomedCanvasWidth, zoomedCanvasHeight)\n    }\n\n    drawImageOnCanvas(img, ctx, canvasWidth, canvasHeight) {\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n        ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight)\n    }\n\n    getRectCord(mounseXCoord, mounseYCoord, canvasWidth, canvasHeight, zoomerWidth, zoomerHeight) {\n        let rectStartXCoord = mounseXCoord - zoomerWidth / 2\n        let rectStartYCoord = mounseYCoord - zoomerHeight / 2\n\n        if (rectStartXCoord < 0) {\n            rectStartXCoord = 0\n        } else if (rectStartXCoord > canvasWidth - zoomerWidth) {\n            rectStartXCoord = canvasWidth - zoomerWidth\n        }\n\n        if (rectStartYCoord < 0) {\n            rectStartYCoord = 0\n        } else if (rectStartYCoord > canvasHeight - zoomerHeight) {\n            rectStartYCoord = canvasHeight - zoomerHeight\n        }\n        return [rectStartXCoord, rectStartYCoord, zoomerWidth, zoomerHeight]\n    }\n\n    drawRectOnCanvas(ctx, rectCoord) {\n        ctx.fillStyle = this.props.zoomer.style\n        ctx.fillRect(...rectCoord)\n    }\n\n    drawImageOnZoomedCanvas(img, zoomedCtx, mounseXCoord, mounseYCoord, zoomedCanvasWidth, zoomedCanvasHeight, widthRadio, heightRadio, zoomerWidth, zoomerHeight) {\n        zoomedCtx.clearRect(0, 0, zoomedCanvasWidth, zoomedCanvasHeight)\n        zoomedCtx.drawImage(img, (mounseXCoord - zoomerWidth / 2) * widthRadio, (mounseYCoord - zoomerHeight / 2) * heightRadio, zoomerWidth * widthRadio, zoomerHeight * heightRadio, 0, 0, zoomedCanvasWidth, zoomedCanvasHeight)\n    }\n\n    restoreCanvas(img, ctx, zoomedCtx, canvasWidth, canvasHeight, zoomedCanvasWidth, zoomedCanvasHeight) {\n        this.drawImageOnCanvas(img, ctx, canvasWidth, canvasHeight)\n        zoomedCtx.clearRect(0, 0, zoomedCanvasWidth, zoomedCanvasHeight)\n        this.setState({showZoomedCanvas: false})\n    }\n\n    render() {\n        const zoomeCanvas = this.state.showZoomedCanvas\n            ? 'inline'\n            : 'none'\n        return (\n            <div>\n                <canvas id={this.props.mainImage.id} className={this.props.mainImage.className} ref={this.props.mainImage.id} width={this.props.mainImage.width} height={this.props.mainImage.height}/>\n                <canvas id={this.props.zoomedImage.id} className={this.props.zoomedImage.className} ref={this.props.zoomedImage.id} width={this.props.zoomedImage.width} height={this.props.zoomedImage.height} style={{\n                    display: zoomeCanvas\n                }}/> {this.props.children}\n            </div>\n        )\n    }\n}\n\nImageZoomer.defaultProps = defaultProps\nImageZoomer.propTypes = propTypes\n\nexport default ImageZoomer\n\n\n\n/** WEBPACK FOOTER **\n ** src/ImageZoomer.js\n **/","import React from 'react'\n\nclass ImagePicker extends React.Component {\n    constructor(props) {\n        super(props)    \n    }\n    \n    changeImage(image) {\n        this.props.changeImage(image)\n    }\n    render() {\n        return (\n            <div>\n                <ul className='imagePickerList'>\n                    {this.props.images.map(image => <li key={image}><img src={image} onClick={()=>this.changeImage(image)}></img></li>)}  \n                </ul>      \n            </div>\n        )\n    }\n}\n\nexport default ImagePicker\n\n\n\n/** WEBPACK FOOTER **\n ** src/example/ImagePicker.js\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAFA;AADA;AAOA;;;;AA9CA;AACA;AAgDA;;;;;;AC5DA;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAZA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAIA;AAJA;AAOA;;;;AAjHA;AACA;AAmHA;AACA;AACA;;;;;;;;;;;;;;;ACjJA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAMA;;;;AAhBA;AACA;AAkBA;;;","sourceRoot":""}